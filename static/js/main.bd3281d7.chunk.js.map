{"version":3,"sources":["components/Navbar.js","components/Card.js","components/pages/Home.js","components/ButtonCommon.js","components/CardOwned.js","components/pages/Pokemon-owned.js","components/pages/Pokemon-detail.js","App.js","index.js"],"names":["Navbar","useState","click","setClick","closeMobileMenu","className","to","onClick","Card","props","id","setId","useEffect","splittedStr","url","split","pokemonId","length","getPokemonId","pathname","src","image","name","owned","Home","data","setData","next","setNext","previous","setPrevious","listPokemon","fetchData","a","JSON","parse","localStorage","getItem","setItem","stringify","axios","tmpData","items","results","Promise","all","map","el","getImage","imageurl","listOwned","filter","e","pokemonType","window","scrollTo","top","behavior","response","sprites","other","dream_world","front_default","disabled","ButtonCommon","children","type","CardOwned","PokemonOwned","isEmpty","setIsEmpty","tmp_result","result","parsePokemeon","releasePokemon","find","d","alert","updatedListPokemon","splice","indexOf","PokemonDetail","moves","setMoves","types","setTypes","show","setShow","setName","isError","setIsError","textError","setTextError","history","useHistory","match","params","temp_data","item","location","handleOnSubmit","pokemonList","checkExistingName","newPokemon","toLowerCase","push","routeChange","Math","round","random","t","m","move","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target","Text","Footer","Button","variant","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd3281d7.chunk.js","sourcesContent":["import React, {  useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Navbar.css';\nfunction Navbar() {\n    const [click, setClick] = useState(false);\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    return (\n        <>\n            <nav className=\"navbar\">\n                <div className=\"navbar-container\">\n                    <Link to=\"/\" className=\"navbar-logo\">\n                        Pokemon\n                </Link>\n                    <div className='menu-icon' onClick={handleClick}>\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n                    </div>\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                        <li className='nav-item'>\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu} >\n                                Pokemon List\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/owned' className='nav-links' onClick={closeMobileMenu} >\n                                Pokemon Owned\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </>\n    )\n}\n\nexport default Navbar\n","import React, { useEffect, useState } from 'react';\nimport './Card.css';\nimport { Link } from 'react-router-dom'\n\n\nfunction Card(props) {\n\n    const [id, setId] = useState('')\n\n    const getPokemonId = () => {\n        const splittedStr = props.url.split('/');\n        const pokemonId = splittedStr[splittedStr.length -2];\n        setId(pokemonId)\n        \n    }\n    useEffect(() => {\n        getPokemonId()\n        \n    },[])\n\n    return (\n        <Link to={{\n            pathname:\"/detail/\" + id,\n            url:props.url\n        }}>\n            <div className=\"card-container\">\n                <div className=\"image-container\">\n                    <img src={props.image} />\n                </div>\n                <div className=\"card-info\">\n                    <h3>{props.name}</h3>\n                    <p>Owned: {props.owned? props.owned : 0}</p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default Card;","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport '../../App.css';\nimport './Home.css';\nimport Card from '../Card';\n\nfunction Home() {\n\n    const url = 'https://pokeapi.co/api/v2/pokemon?limit=100&offset=0'\n    const [data, setData] = useState([]);\n    const [next, setNext] = useState(null);\n    const [previous, setPrevious] = useState(null);\n    let listPokemon = [];\n\n    const fetchData = async (url) => {\n        listPokemon = JSON.parse(localStorage.getItem('list_pokemon'));\n        if(!listPokemon) {\n            localStorage.setItem('list_pokemon', JSON.stringify([]))\n            listPokemon = [];\n        } \n        const tmpData = await axios(url)\n        const items = tmpData.data.results;\n        const results = await Promise.all(items.map(async (el) => {\n            const imageurl = await getImage(el.url);\n            el.imageurl = imageurl;\n\n            //get existing pokemon\n            const listOwned = listPokemon.filter(e => e.pokemonType === el.name);\n            el.owned = listOwned.length;\n            return el;\n        }))\n        setData(results);\n        setNext(tmpData.data.next)\n        setPrevious(tmpData.data.previous)\n        window.scrollTo({top: 0, behavior:'smooth'})\n    }\n\n    useEffect(() => {\n        fetchData(url);\n    }, [])\n\n    const getImage = async (url) => {\n        const response = await axios(url)\n        return response.data.sprites.other.dream_world.front_default;\n    }\n\n    const onNext = () => {\n        fetchData(next)\n    }\n\n    const onPrev = () => {\n        fetchData(previous)\n    }\n\n    return (\n        <>\n            <div className=\"home-container\">\n                <div className=\"home-quotes\">\n                    <h1>Catch Your Pokemon</h1>\n                    <p>Let's GO!</p>\n                </div>\n                <div className=\"pokemon-container\">\n                    {data.map(el => <Card name={el.name} image={el.imageurl} key={el.url} url={el.url} owned={el.owned} />)}\n                </div>\n                <div className=\"pagination-container\">\n                    <button className=\"button-pagination\" onClick={onPrev} disabled={!previous}>Prev</button>\n                    <button className=\"button-pagination\" onClick={onNext} disabled={!next}>Next</button>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport './ButtonCommon.css';\n\n\nexport const ButtonCommon = ({\n    children, onClick, type\n}) => {\n    return (\n        <button className={ `button-common ${type}`} onClick={onClick}>{children}</button>\n    )\n}\n\nexport default ButtonCommon;","import React from 'react';\nimport ButtonCommon from './ButtonCommon';\nimport './CardOwned.css';\n\nfunction CardOwned(props) {\n\n    const handleOnClick = () => {\n        props.onClick(props.data)\n    }\n\n\n    return(\n        <div className=\"card-owned-container\">\n            <div className=\"image-container\">\n                <img src={props.data.image} />\n            </div>\n            <div className=\"card-owned-info\">\n                <h3>{props.data.name}</h3>\n                <p>{props.data.pokemonType}</p>\n            </div>\n            <div className=\"button-release-container\">\n                <ButtonCommon type='danger' children={'Release Pokemon!'} onClick={handleOnClick} />\n            </div>\n        </div>\n    )\n}\n\nexport default CardOwned;","import React, { useEffect, useState } from 'react';\nimport '../../App.css';\nimport './Home.css';\nimport CardOwned from '../CardOwned';\n\nfunction PokemonOwned() {\n\n    const [data, setData] = useState([]);\n    const [isEmpty, setIsEmpty] = useState(true);\n\n    const parsePokemeon = () => {\n        const tmp_result = localStorage.getItem('list_pokemon');\n        const result = JSON.parse(tmp_result)\n\n        if (result.length > 0) {\n            setIsEmpty(false)\n        }\n        setData(result)\n    }\n\n    useEffect(() => {\n        parsePokemeon()\n    }, [])\n\n    const releasePokemon = (el) => {\n        const result = data.find(d => el === d);\n        if(!result) return alert(`Oops! Data doesn't exist`);\n        let updatedListPokemon = [...data];\n        updatedListPokemon.splice(updatedListPokemon.indexOf(result, 1))\n        localStorage.setItem('list_pokemon', JSON.stringify(updatedListPokemon));\n        setData(updatedListPokemon);\n        if(updatedListPokemon.length === 0 ) setIsEmpty(true)\n    }\n    return (\n        <>\n            <div className='home-container'>\n                {isEmpty ? <div className=\"home-quotes\">\n                    <h1>Oops! You didn't have Pokemon!</h1>\n                    <p>Let's Catch it!</p>\n                </div> : null}\n                <div className=\"pokemon-container\">\n                    {data.map(el => \n                        <CardOwned data={el} onClick={releasePokemon}  />\n                        )}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default PokemonOwned;","import './Pokemon-detail.css';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport ButtonCommon from '../ButtonCommon';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nfunction PokemonDetail(props) {\n\n    const [data, setData] = useState(null);\n    const [moves, setMoves] = useState([]);\n    const [types, setTypes] = useState([]);\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [isError, setIsError] = useState(false)\n    const [textError, setTextError] = useState('');\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    let history = useHistory();\n    const baseUrl = 'https://pokeapi.co/api/v2/pokemon/'\n\n    const fetchData = async (url) => {\n        const id = props.match.params.id;\n        const temp_data = await axios(baseUrl + id);\n        const item = temp_data.data;\n        setData(item);\n        setTypes(item.types)\n        setMoves(item.moves)\n\n    }\n\n    useEffect(() => {\n        fetchData(props.location.url);\n\n    }, []);\n\n    const getProbabilities = () => {\n        const result = Math.round(Math.random() * 100);\n        return result;\n    }\n\n    const catchPokemon = () => {\n        const probabilities = getProbabilities();\n        if (probabilities <= 50) return alert('Oops you miss the Pokemon!');\n\n        handleShow();\n    }\n\n    const handleOnSubmit = () => {\n        let pokemonList = JSON.parse(localStorage.getItem('list_pokemon'));\n        if(!name) {\n            setIsError(true);\n            setTextError('Please Insert a Name!');\n            return;\n        } \n\n        const existingName = checkExistingName(name);\n        if(existingName.length > 0) {\n            setIsError(true);\n            setTextError('Name Has Been Taken');\n            return;\n        }\n        \n        setIsError(false);\n\n        const newPokemon = {\n            'name': name.toLowerCase(),\n            'pokemonType': data.name,\n            'image' : data.sprites.other.dream_world.front_default\n        }\n        pokemonList.push(newPokemon);\n        localStorage.setItem('list_pokemon', JSON.stringify(pokemonList))\n        routeChange()\n    }\n\n    const routeChange = () => {\n        let path = `/`;\n        history.push(path)\n    }\n\n    const checkExistingName = (name) => {\n        let list = JSON.parse(localStorage.getItem('list_pokemon'));\n        const result = list.filter(e => e.name === name.toLowerCase())\n        return result;\n    }\n\n    return (\n        <> {data? <div className=\"pokemon-detail-container\">\n        <div className=\"pokemon-detail-wrapper\">\n            <div className=\"pokemon-detail-image\">\n                <img src={data.sprites.other.dream_world.front_default} />\n            </div>\n            <div className=\"button-catch-container\">\n                <ButtonCommon children='Catch Pokemon' onClick={catchPokemon} />\n            </div>\n            <div className=\"pokemon-detail-info\">\n                <div className=\"pokemon-detail-info-container\">\n                    <div className=\"info-name\">\n                        <h3>{data.name}</h3>\n                    </div>\n                    <table >\n                        <tbody>\n                            <tr className=\"space\">\n                                <td>Types</td>\n                                <td>:</td>\n                                <td>\n                                    <ul>\n                                        {types.map(t =>\n                                            <li>\n                                                {t.type.name}\n                                            </li>)}\n                                    </ul>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Moves</td>\n                                <td>:</td>\n                                <td>\n                                    <ul>\n                                        {moves.map(m =>\n                                            <li>\n                                                {m.move.name}\n                                            </li>)}\n                                    </ul>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div> :null}\n            \n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Insert Pokemon Name!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleOnSubmit}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter Name\" value={name} onChange={e => setName(e.target.value)} />\n                            {isError? <Form.Text className=\"text-muted\">\n                                {textError}\n                            </Form.Text> : null}\n                            \n                        </Form.Group>\n                        <Modal.Footer>\n                            <Button variant=\"primary\" onClick={handleOnSubmit}>\n                                Submit\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal.Body>\n\n            </Modal>\n        </>\n    )\n}\nexport default PokemonDetail;","import './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\nimport Home from './components/pages/Home'\nimport PokemonOwned from './components/pages/Pokemon-owned';\nimport PokemonDetail from './components/pages/Pokemon-detail';\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/owned' exact component={PokemonOwned} />\n          <Route path='/detail/:id' exact component={PokemonDetail} />\n        </Switch>\n      </HashRouter>\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.min.css'; \n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}